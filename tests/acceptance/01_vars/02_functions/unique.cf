#######################################################
#
# Test unique()
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
      "results" slist => {
                           "starting list = 1,2,3,one,two,three,long string,four,fix,six,one,two,three",
                           "starting length = 13",
                           "unique list = 1,2,3,one,two,three,long string,four,fix,six",
                           "unique length = 10",
      };

  files:
      "$(G.testfile).expected"
      create => "true",
      edit_defaults => init_empty,
      edit_line => init_insert;
}

body edit_defaults init_empty
{
      empty_file_before_editing => "true";
      edit_backup => "false";
}

bundle edit_line init_insert
{
  insert_lines:
      "$(init.results)";
}

#######################################################

bundle agent test
{
  vars:
      "test" slist => {
                        1,2,3,
                        "one", "two", "three",
                        "long string",
                        "four", "fix", "six",
                        "one", "two", "three",
      };
      "test_str" string => join(",", "test");
      "test_len" int => length(test);

      "test_unique" slist => unique("test");
      "unique_str" string => join(",", "test_unique");
      "unique_len" int => length(test_unique);

  files:
      "$(G.testfile).actual"
      create => "true",
      edit_line => test_insert;
}

bundle edit_line test_insert
{
  insert_lines:
      "starting list = $(test.test_str)";
      "starting length = $(test.test_len)";
      "unique list = $(test.unique_str)";
      "unique length = $(test.unique_len)";
}

#######################################################

bundle agent check
{
  methods:
      "any" usebundle => sorted_check_diff("$(G.testfile).actual",
                                           "$(G.testfile).expected",
                                           "$(this.promise_filename)");
}
